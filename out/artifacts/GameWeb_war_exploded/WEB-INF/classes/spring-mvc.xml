<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
            ">
    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>
    <!--自动扫描-->
    <context:component-scan base-package="com.zyx"/>

    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <mvc:resources location="/static/" mapping="/static/**"/>

    <!-- Declare a view resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!-- 未认证或未授权时跳转必须在springmvc里面配，spring-shiro里的shirofilter配不生效 -->
    <bean   class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--表示捕获的异常 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    <!--捕获该异常时跳转的路径 -->
                    /403
                </prop>
                <!--表示捕获的异常 -->
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    <!--捕获该异常时跳转的路径 -->
                    /403
                </prop>
            </props>
        </property>
    </bean>

</beans>

        <!--
        <beans xmlns="http://www.springframework.org/schema/beans"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:aop="http://www.springframework.org/schema/aop"
               xmlns:mvc="http://www.springframework.org/schema/mvc"
               xmlns:context="http://www.springframework.org/schema/context"
               xmlns:tx="http://www.springframework.org/schema/tx"
               xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd">

            &lt;!&ndash; 1、配置映射器与适配器 &ndash;&gt;
            <mvc:annotation-driven></mvc:annotation-driven>
            &lt;!&ndash; 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 &ndash;&gt;
            <context:component-scan base-package="com.zyx" />
            &lt;!&ndash;避免IE执行AJAX时，返回JSON出现下载文件 &ndash;&gt;
            &lt;!&ndash; 输出对象转JSON支持   &ndash;&gt;
            <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>

            <bean id="jsonConverter"
                  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            &lt;!&ndash; 启动SpringMVC的注解功能，完成请求和注解POJO的映射 &ndash;&gt;
            <bean
                    class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
                <property name="messageConverters">
                    <list>
                        <ref bean="stringConverter"/>
                        <ref bean="jsonConverter" />
                    </list>
                </property>
            </bean>

            &lt;!&ndash; 定义跳转的文件的前后缀 ，视图模式配置&ndash;&gt;
            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                &lt;!&ndash; 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 &ndash;&gt;
                <property name="prefix" value="/" />
                <property name="suffix" value=".jsp" />
            </bean>

            &lt;!&ndash; 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 &ndash;&gt;
            <bean id="multipartResolver"
                  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
                &lt;!&ndash; 默认编码 &ndash;&gt;
                <property name="defaultEncoding" value="utf-8" />
                &lt;!&ndash; 文件大小最大值 &ndash;&gt;
                <property name="maxUploadSize" value="10485760000" />
                &lt;!&ndash; 内存中的最大值 &ndash;&gt;
                <property name="maxInMemorySize" value="40960" />
            </bean>

            &lt;!&ndash;  配置静态资源，防止被springmvc过滤 &ndash;&gt;
            <mvc:resources location="/" mapping="/**/*.html"/>
            <mvc:resources location="/" mapping="/**/*.js"/>
            <mvc:resources location="/" mapping="/**/*.css"/>
            <mvc:resources location="/" mapping="/**/*.png"/>
            <mvc:resources location="/" mapping="/**/*.gif"/>
            <mvc:resources location="/" mapping="/**/*.woff"/>
            <mvc:resources location="/" mapping="/**/*.ttf"/>
            <mvc:resources location="/" mapping="/**/*.jpg"/>
            <mvc:resources location="/" mapping="/**/*.mp3"/>
            <mvc:resources location="/" mapping="/**/*.mp4"/>


        </beans>
        -->


